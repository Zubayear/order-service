// Code generated by entc, DO NOT EDIT.

package ent

import (
	"OrderService/ent/order"
	"OrderService/ent/schema"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescOrderPlaced is the schema descriptor for order_placed field.
	orderDescOrderPlaced := orderFields[3].Descriptor()
	// order.DefaultOrderPlaced holds the default value on creation for the order_placed field.
	order.DefaultOrderPlaced = orderDescOrderPlaced.Default.(func() time.Time)
	// order.UpdateDefaultOrderPlaced holds the default value on update for the order_placed field.
	order.UpdateDefaultOrderPlaced = orderDescOrderPlaced.UpdateDefault.(func() time.Time)
	// orderDescOrderPaid is the schema descriptor for order_paid field.
	orderDescOrderPaid := orderFields[4].Descriptor()
	// order.DefaultOrderPaid holds the default value on creation for the order_paid field.
	order.DefaultOrderPaid = orderDescOrderPaid.Default.(bool)
	// orderDescID is the schema descriptor for id field.
	orderDescID := orderFields[0].Descriptor()
	// order.DefaultID holds the default value on creation for the id field.
	order.DefaultID = orderDescID.Default.(func() uuid.UUID)
}
