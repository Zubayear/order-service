// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"OrderService/consumer"
	"OrderService/external"
	"OrderService/handler"
	"OrderService/repository"
)

// Injectors from wire.go:

func DependencyProvider() (*handler.OrderService, error) {
	host, err := external.HostProvider()
	if err != nil {
		return nil, err
	}
	client, err := repository.ClientProvider(host)
	if err != nil {
		return nil, err
	}
	orderRepository, err := repository.OrderRepositoryProvider(client)
	if err != nil {
		return nil, err
	}
	orderService, err := handler.NewOrderProvider(orderRepository)
	if err != nil {
		return nil, err
	}
	return orderService, nil
}

func BrokerDependency() (*consumer.MessageConsumer, error) {
	host, err := external.HostProvider()
	if err != nil {
		return nil, err
	}
	client, err := repository.ClientProvider(host)
	if err != nil {
		return nil, err
	}
	orderRepository, err := repository.OrderRepositoryProvider(client)
	if err != nil {
		return nil, err
	}
	messageConsumer, err := consumer.MessageConsumerProvider(orderRepository)
	if err != nil {
		return nil, err
	}
	return messageConsumer, nil
}
